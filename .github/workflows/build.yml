name: build

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  workflow_dispatch:

env:
    DOTNETVERSION: 6.0.400
    ANDROID_PROJECT_PATH: "src/MoneyFox.Android/MoneyFox.Android.csproj"
    IOS_PROJECT_PATH: "src/MoneyFox.Ios/MoneyFox.Ios.csproj"
    TEST_PROJECT_PATH: "src/MoneyFox.Tests/MoneyFox.Tests.csproj"

jobs:
  buildAndroid:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '${{env.DOTNETVERSION}}'

    - name: Install MAUI Workload
      run: dotnet workload install maui --ignore-failed-sources

    - name: Restore Dependencies
      run: dotnet restore ${{env.ANDROID_PROJECT_PATH}}

    - name: Test
      run: dotnet test ${{env.TEST_PROJECT_PATH}}

    - name: Build MAUI Android
      run: dotnet publish ${{env.ANDROID_PROJECT_PATH}} -c Release -f net6.0-android --no-restore

    - name: Upload Android Artifact
      if: github.ref == 'refs/heads/master'
      uses: actions/upload-artifact@v3.1.0
      with:
        name: moneyfox-android-build
        path: src/MoneyFox.Android/bin/Release/**/*Signed.a*


  buildiOS:

    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '${{env.DOTNETVERSION}}'

    - name: Install MAUI Workload
      run: dotnet workload install maui --ignore-failed-sources

    - name: Restore Dependencies
      run: dotnet restore ${{env.IOS_PROJECT_PATH}}

    - name: Test
      run: dotnet test ${{env.TEST_PROJECT_PATH}}

    - name: Install the Apple certificate and provisioning profile
      env:
        BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
        P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
        BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
        KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
      run: |
        # create variables
        CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
        PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
        KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

        # import certificate and provisioning profile from secrets
        echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode --output $CERTIFICATE_PATH
        echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode --output $PP_PATH

        # create temporary keychain
        security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
        security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
        security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

        # import certificate to keychain
        security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
        security list-keychain -d user -s $KEYCHAIN_PATH

        # apply provisioning profile
        mkdir -p ~/Library/MobileDevice/Provisioning Profiles
        cp $PP_PATH ~/Library/MobileDevice/Provisioning Profiles

    - name: Build MAUI iOS
      run: dotnet build ${{env.IOS_PROJECT_PATH}} -c Release -f net6.0-ios --no-restore /p:buildForSimulator=false /p:packageApp=True /p:ArchiveOnBuild=False 

    - name: Upload iOS Artifact
      if: github.ref == 'refs/heads/master'
      uses: actions/upload-artifact@v3.1.0
      with:
        name: moneyfox-ios-build
        path: src/MoneyFox.Ios/bin/Release/**/*.app
