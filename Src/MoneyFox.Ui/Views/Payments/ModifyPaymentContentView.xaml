<?xml version="1.0" encoding="UTF-8"?>

<ContentView
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:resources="clr-namespace:MoneyFox.Core.Resources;assembly=MoneyFox.Core"
    xmlns:controls="clr-namespace:MoneyFox.Ui.Controls"
    xmlns:converter="clr-namespace:MoneyFox.Ui.Converter"
    xmlns:payments="clr-namespace:MoneyFox.Ui.ViewModels.Payments"
    xmlns:views="clr-namespace:MoneyFox.Ui.Views"
    x:Class="MoneyFox.Ui.Views.Payments.ModifyPaymentContentView"
    x:DataType="payments:ModifyPaymentViewModel">

    <ContentView.Resources>
        <ResourceDictionary>
            <converter:InverseBoolConverter x:Key="Inverter" />
            <converter:NoCategorySelectedConverter x:Key="NoCategorySelectedConverter" />
            <converter:DecimalConverter x:Key="DecimalConverter" />
        </ResourceDictionary>
    </ContentView.Resources>

    <ScrollView x:DataType="payments:ModifyPaymentViewModel" Padding="6,0,6,0">
        <VerticalStackLayout Spacing="12">

            <controls:PaymentTypePicker PickerTitle="{x:Static resources:Strings.PaymentTypeLabel}"
                    PaymentTypeSource="{Binding PaymentTypeList}"
                    SelectedType="{Binding SelectedPayment.Type, Mode=TwoWay}" />

            <controls:AccountPicker PickerTitle="{Binding AccountHeader, Mode=OneWay}"
                    AccountsSource="{Binding ChargedAccounts}"
                    SelectedAccount="{Binding SelectedPayment.ChargedAccount}" />

            <controls:AccountPicker PickerTitle="{x:Static resources:Strings.TargetAccountLabel}"
                AccountsSource="{Binding TargetAccounts}"
                SelectedAccount="{Binding SelectedPayment.TargetAccount}"
                IsVisible="{Binding SelectedPayment.IsTransfer}" />
            
            <controls:AmountEntry 
                AmountFieldTitle="{x:Static resources:Strings.AmountLabel}"
                Amount="{Binding SelectedPayment.Amount, Converter={StaticResource DecimalConverter}}"
                EntryPlaceholder="{x:Static resources:Strings.AmountLabel}" />

            <Label Text="{x:Static resources:Strings.CategoryLabel}" />

            <Grid ColumnDefinitions="70*, 6, 40">
                <Button Grid.Column="0"
                        Text="{Binding SelectedPayment.Category, Converter={StaticResource NoCategorySelectedConverter}}"
                        Command="{Binding GoToSelectCategoryDialogCommand}" />

                <ImageButton Grid.Column="2"
                             Command="{Binding ResetCategoryCommand}">
                    <ImageButton.Source>
                        <FontImageSource FontFamily="MaterialIcons" 
                                         Glyph="{x:Static views:IconFont.Close}" 
                                         Color="{AppThemeBinding Dark={StaticResource White}, Light={StaticResource Gray900}}" />
                    </ImageButton.Source>
                </ImageButton>
            </Grid>

            <Label Text="{x:Static resources:Strings.DateLabel}" />
            <DatePicker Date="{Binding SelectedPayment.Date}"
                        Format="D" />

            <controls:TextEntry 
                TextFieldTitle="{x:Static resources:Strings.NoteLabel}"
                EntryPlaceholder="{x:Static resources:Strings.NoteLabel}"
                EntryText="{Binding SelectedPayment.Note}" />
 
            <Grid HorizontalOptions="FillAndExpand" ColumnDefinitions="*, Auto">
                <Label Grid.Column="0"
                       VerticalOptions="Center"
                       Text="{x:Static resources:Strings.RecurringLabel}" />

                <Switch Grid.Column="1"
                        HorizontalOptions="End"
                        IsToggled="{Binding SelectedPayment.IsRecurring}" />
            </Grid>

            <StackLayout IsVisible="{Binding SelectedPayment.IsRecurring}"
                         Spacing="6">
                <Label Text="{x:Static resources:Strings.RecurrenceLabel}" />
                <Picker ItemsSource="{Binding RecurrenceList}"
                        SelectedItem="{Binding SelectedPayment.RecurringPayment.Recurrence}" />

                <Grid HorizontalOptions="FillAndExpand"
                      ColumnDefinitions="70*, 15*"
                      IsVisible="{Binding SelectedPayment.RecurringPayment.AllowLastDayOfMonth}">

                    <Label Grid.Column="0"
                           VerticalOptions="Center"
                           Text="{x:Static resources:Strings.LastDayOfMonthLabel}" />

                    <Switch Grid.Column="1"
                            HorizontalOptions="End"
                            IsToggled="{Binding SelectedPayment.RecurringPayment.IsLastDayOfMonth}" />
                </Grid>

                <Grid HorizontalOptions="FillAndExpand" ColumnDefinitions="*, Auto">

                    <Label Grid.Column="0"
                           VerticalOptions="Center"
                           Text="{x:Static resources:Strings.EndlessLabel}" />

                    <Switch Grid.Column="1"
                            HorizontalOptions="Start"
                            IsToggled="{Binding SelectedPayment.RecurringPayment.IsEndless}" />
                </Grid>

                <StackLayout Spacing="6"
                    IsVisible="{Binding SelectedPayment.RecurringPayment.IsEndless, Converter={StaticResource Inverter}}">
                    <Label Text="{x:Static resources:Strings.EnddateLabel}"
                           Margin="0,5,0,0"/>

                    <DatePicker Date="{Binding SelectedPayment.RecurringPayment.EndDate}"
                                Format="D" />
                </StackLayout>

            </StackLayout>
        </VerticalStackLayout>
    </ScrollView>
</ContentView>