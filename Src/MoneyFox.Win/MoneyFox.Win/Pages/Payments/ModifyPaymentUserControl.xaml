<UserControl
    x:Class="MoneyFox.Win.Pages.Payments.ModifyPaymentUserControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:resources="using:MoneyFox.Core.Resources"
    xmlns:payments="using:MoneyFox.Win.Pages.Payments"
    xmlns:designTime="using:MoneyFox.Win.ViewModels.DesignTime"
    xmlns:converter="using:MoneyFox.Win.Converter"
    xmlns:accounts="using:MoneyFox.Win.ViewModels.Accounts"
    d:DesignHeight="300"
    d:DesignWidth="400"
    mc:Ignorable="d">

    <d:Page.DataContext>
        <designTime:DesignTimeModifyPaymentViewModel />
    </d:Page.DataContext>

    <UserControl.Resources>
        <converter:AmountFormatConverter x:Key="AmountConverter" />
        <converter:DateTimeToDateTimeOffsetConverter x:Key="DateTimeToDateTimeOffsetConverter" />
        <converter:BooleanToVisibilityConverter x:Key="BooleanVisibilityConverter" />
        <converter:RecurrenceTypeConverter x:Key="RecurrenceTypeConverter" />
        <converter:PaymentTypeToStringConverter x:Key="PaymentTypeToStringConverter" />

        <DataTemplate x:Key="ComboBoxAccountTemplate" x:DataType="accounts:AccountViewModel">
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="{x:Bind Name}" />
                <TextBlock Text=" (" />
                <TextBlock Text="{x:Bind CurrentBalance, Converter={StaticResource AmountConverter}}" />
                <TextBlock Text=")" />
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="ComboBoxRecurrenceTemplate">
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="{Binding Converter={StaticResource RecurrenceTypeConverter}}" />
            </StackPanel>
        </DataTemplate>
    </UserControl.Resources>

    <StackPanel>
        <ComboBox
            HorizontalAlignment="Stretch"
            Header="{x:Bind resources:Strings.PaymentTypeLabel}"
            ItemsSource="{x:Bind ViewModel.PaymentTypeList}"
            DisplayMemberPath="{Binding ., Converter={StaticResource PaymentTypeToStringConverter}}"
            SelectedItem="{x:Bind ViewModel.SelectedPayment.Type, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

        <ComboBox
            Margin="{StaticResource SmallTitleContentMargin}"
            HorizontalAlignment="Stretch"
            Header="{x:Bind ViewModel.AccountHeader}"
            ItemTemplate="{StaticResource ComboBoxAccountTemplate}"
            ItemsSource="{x:Bind ViewModel.ChargedAccounts, Mode=OneWay}"
            SelectedItem="{x:Bind ViewModel.SelectedPayment.ChargedAccount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
            <i:Interaction.Behaviors>
                <core:EventTriggerBehavior EventName="SelectionChanged">
                    <core:InvokeCommandAction Command="{Binding SelectedItemChangedCommand}" />
                </core:EventTriggerBehavior>
            </i:Interaction.Behaviors>
        </ComboBox>

        <ComboBox
            Margin="{StaticResource SmallTitleContentMargin}"
            HorizontalAlignment="Stretch"
            Header="{x:Bind resources:Strings.TargetAccountLabel}"
            ItemTemplate="{StaticResource ComboBoxAccountTemplate}"
            ItemsSource="{x:Bind ViewModel.TargetAccounts, Mode=OneWay}"
            SelectedItem="{x:Bind ViewModel.SelectedPayment.TargetAccount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
            Visibility="{x:Bind ViewModel.SelectedPayment.IsTransfer, Converter={StaticResource BooleanVisibilityConverter}, Mode=OneWay}">
            <i:Interaction.Behaviors>
                <core:EventTriggerBehavior EventName="SelectionChanged">
                    <core:InvokeCommandAction Command="{Binding SelectedItemChangedCommand}" />
                </core:EventTriggerBehavior>
            </i:Interaction.Behaviors>

        </ComboBox>
        <TextBox
            Margin="{StaticResource SmallTitleContentMargin}"
            Header="{x:Bind resources:Strings.AmountLabel}"
            InputScope="Number"
            Text="{x:Bind ViewModel.AmountString, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
            TextAlignment="Right" />

        <payments:CategorySelectionControl ViewModel="{x:Bind ViewModel}" />

        <CalendarDatePicker
            Margin="{StaticResource SmallTitleContentMargin}"
            HorizontalAlignment="Stretch"
            FirstDayOfWeek="Monday"
            Date="{x:Bind ViewModel.SelectedPayment.Date, Converter={StaticResource DateTimeToDateTimeOffsetConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
            Header="{x:Bind resources:Strings.DateLabel}" />
        <TextBox
            Margin="{StaticResource SmallTitleContentMargin}"
            Header="{x:Bind resources:Strings.NoteLabel}"
            Text="{x:Bind ViewModel.SelectedPayment.Note, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
            TextWrapping="Wrap" />
        <!--  We set the binding as OneTime and update the value in the code behind to ensure that it is visible when the animation plays  -->
        <ToggleSwitch
            Margin="{StaticResource SmallTitleContentMargin}"
            VerticalAlignment="Stretch"
            Header="{x:Bind resources:Strings.RecurringLabel}"
            IsOn="{x:Bind ViewModel.SelectedPayment.IsRecurring, Mode=TwoWay}" />
        <StackPanel
            Visibility="{x:Bind ViewModel.SelectedPayment.IsRecurring, Converter={StaticResource BooleanVisibilityConverter}, Mode=OneWay}">
            <ComboBox
                Margin="{StaticResource SmallTitleContentMargin}"
                HorizontalAlignment="Stretch"
                Header="{x:Bind resources:Strings.RecurrenceLabel}"
                ItemTemplate="{StaticResource ComboBoxRecurrenceTemplate}"
                ItemsSource="{x:Bind ViewModel.RecurrenceList}"
                SelectedItem="{x:Bind ViewModel.SelectedPayment.RecurringPayment.Recurrence, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            <CheckBox
                Margin="{StaticResource SmallTitleContentMargin}"
                Content="{x:Bind resources:Strings.LastDayOfMonthLabel}"
                IsChecked="{x:Bind ViewModel.SelectedPayment.RecurringPayment.IsLastDayOfMonth, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                Visibility="{x:Bind ViewModel.SelectedPayment.RecurringPayment.AllowLastDayOfMonth, Converter={StaticResource BooleanVisibilityConverter}, Mode=OneWay}" />
            <CheckBox
                Margin="{StaticResource SmallTitleContentMargin}"
                Content="{x:Bind resources:Strings.EndlessLabel}"
                IsChecked="{x:Bind ViewModel.SelectedPayment.RecurringPayment.IsEndless, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            <CalendarDatePicker
                FirstDayOfWeek="Monday"
                Margin="{StaticResource SmallTitleContentMargin}"
                Date="{x:Bind ViewModel.SelectedPayment.RecurringPayment.EndDate, Converter={StaticResource DateTimeToDateTimeOffsetConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                Header="{x:Bind resources:Strings.EnddateLabel}"
                Visibility="{x:Bind ViewModel.SelectedPayment.RecurringPayment.IsEndless, Converter={StaticResource BooleanVisibilityConverter}, ConverterParameter=revert, Mode=OneWay}" />
        </StackPanel>
    </StackPanel>
</UserControl>